% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data-generation.R
\name{gendata_crt}
\alias{gendata_crt}
\title{Generate data from GLMM}
\usage{
gendata_crt(family = gaussian, nclus, size, theta = 0, sigma, Sigma,
  mu, rho = 0, sd = 1, redist = "normal")
}
\arguments{
\item{family}{a description of the error distribution and link function to
be used in the data generation model. This can be a character string
naming a family function, a family function or the result of a call to a
family function. (See \code{\link[stats]{family}} for details.)
Currently \code{gendata_crt} supports gaussian, binomial, and poisson.}

\item{nclus}{vector of length 2 specifying the number of clusters in
treatment group (trt == 1) and control group (trt == 0), respectively}

\item{size}{vector of length 2 specifying range of cluster sizes that will be
drawn from a uniform distribution}

\item{theta}{treatment effect}

\item{sigma}{SD of random cluster effect; ignored if \code{Sigma} is specified}

\item{Sigma}{optional user-specified covariance matrix for multivariate
normal random cluster effects}

\item{mu}{intercept in GLMM}

\item{rho}{between-cluster correlation (assuming exchangeable covariance); if
non-zero, then there is corrrelation between clusters.}

\item{sd}{SD of residual error (only applies if family = gaussian)}

\item{redist}{assumed distribution for random effects (currently supports
'normal' and 'lognormal')}
}
\description{
\code{gendata_crt} generates a dataset from a generalized linear mixed model
}
\details{
This function generates data from a generalized linear mixed model, a GLMM,
with a fixed intercept, fixed treatment effect, and random cluster intercept.
The data will be sorted increasing by cluster then subject. The GLMM is
\deqn{g(E[Y_{ki}]) = \mu + \alpha_k + \theta * X_k}
where \eqn{X_k} is the treatment indicator for the \eqn{k}th cluster and
\eqn{\alpha ~ N(0, Sigma)}. If only \code{sigma} is specified, then
\code{Sigma} is exchangeable with \code{sigma^2} on the diagonals and
\code{rho * sigma^2} on the off-diagonals. If redist = 'lognormal', then
\eqn{\alpha ~ logN(meanlog = 0, sdlog = sigma)}.
}
\examples{
# generate data from GLMM with bernoulli outcome,
# treatment odds ratio of 1.5, baseline odds in
# control group of 0.3, 10 clusters (5 in each group)
# with sizes ranging from 100 to 200.

set.seed(444)
ds <- gendata_crt(family = binomial, nclus = c(5, 5), size = c(100, 200),
    theta = log(1.5), sigma = 0.5, mu = log(0.3))
head(ds)
#   unique.id clusid id trt y
# 1       1.1      1  1   1 0
# 2       1.2      1  2   1 1
# 3       1.3      1  3   1 0
# 4       1.4      1  4   1 0
# 5       1.5      1  5   1 0
# 6       1.6      1  6   1 0
}
