% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ci.R
\name{permci_glm}
\alias{permci_glm}
\alias{permci_survreg}
\alias{permci_coxph}
\title{Randomization-Based CI for regression}
\usage{
permci_glm(formula, trtname, runit, trtunit = NULL, strat = NULL,
  family = gaussian, data, nperm = 1000, nburn = 0, level = 0.95,
  init, initmethod = "perm", ncores = 1, seed, quietly = F,
  method = "G", m, k, Ps = NULL, n)

permci_survreg(formula, trtname, runit, trtunit = NULL, strat = NULL,
  data, dist = "weibull", nperm = 1000, nburn = 0, level = 0.95,
  init, initmethod = "perm", ncores = 1, seed, quietly = F,
  method = "G", m, k, Ps = NULL, n)

permci_coxph(formula, trtname, runit, trtunit = NULL, strat = NULL,
  data, nperm = 1000, nburn = 0, level = 0.95, init,
  initmethod = "perm", ncores = 1, seed, quietly = F, method = "G",
  m, k, Ps = NULL, n)
}
\arguments{
\item{formula}{an object of class "\code{\link[stats]{formula}}"
(or one that can be coerced to that class): a symbolic description of the
model to be fitted. This argument is passed to the corresponding regression
function, e.g. \code{\link[stats]{glm}} (see Details).}

\item{trtname}{character string specifying the name of randomized treatment
variable in \code{data} (i.e. specifies the variable to permute)}

\item{runit}{character string specifying the name of unit of randomization
in \code{data} (i.e. specifies the level at which trtname will be permuted)}

\item{trtunit}{character string specifying the name of the unit that
corresponds to a unique scalar treatment assignment value (i.e. specifies how
trtname will be permuted at runit level, see Details below). If trtunit =
NULL (default), trtunit is assumed equivalent to runit.}

\item{strat}{an optional character string specifying the name of the variable
in \code{data} upon which randomization was stratified}

\item{family}{a description of the error distribution and link function to
be used in the model. This can be a character string naming a family
function, a family function or the result of a call to a family function.
(See \code{\link[stats]{family}} for details.)}

\item{data}{a data frame containing the variables in the model. This argument
is passed to the corresponding regression function, e.g.
\code{\link[stats]{glm}} (see Details).}

\item{nperm}{number of permutations for each randomization CI bound}

\item{nburn}{number of ``burn-in'' permutations. I.e. algorithm will start at
\code{init} bounds, run for \code{nburn} permutations, then restart algorithm
at latest estimates from ``burn-in'' phase and run for another \code{nperm}
permutations until the final CI estimates are reached. Increasing
\code{nburn} may help convergence if \code{init} CI bounds are poor.}

\item{level}{two-sided confidence level (e.g. level = 0.95 for 95\% CI)}

\item{init}{vector of initial values for CI, with lower bound as
first element and upper bound as second. If \code{init} not provided,
initial bounds are based on \code{initmethod}.}

\item{initmethod}{character; indicates the method to be used for initial
values for CI. If "asymp", initial bounds are based on asymptotic
approximation (e.g. Wald CI for GLM). If "perm" (default), initial bounds are based
on the permutation approach used in Garthwaite (1996) with \eqn{\hat{\theta}
\pm \{(t_2 - t_1)/2\}}, where \eqn{t_1} and \eqn{t_2} denote the second
smallest and second largest estimates from the permutation test.}

\item{ncores}{number of cores to use for computation. If \code{ncores} > 1,
lower and upper bound search procedures run in parallel across 2 cores.}

\item{seed}{a numerical seed to use, passed to \code{\link[base]{set.seed}}
(if \code{ncores == 1}) or \code{\link[doRNG]{registerDoRNG}} (if
\code{ncores > 1}).}

\item{quietly}{logical; if TRUE (and if ncores == 1), status updates will be
printed to Console otherwise, suppress updates.}

\item{method}{if method = 'G' (default), then search is carried out as
described in \href{http://doi.org/10.2307/2532852}{Garthwaite (1996)}. For
longer searches (nperm >= 200,000), method = 'GJ' is recommended and carried
out as outlined in
\href{https://doi.org/10.1198/jcgs.2009.0011}{Garthwaite and Jones (2009)}.}

\item{m}{an optional initial magnitude of the steps; if left unspecified,
m defaults to recommended value proposed in Garthwaite and Buckland (1992)}

\item{k}{step length multiplier}

\item{Ps}{if method = 'GJ', vector of search lengths for each phase (if
unspecified, defaults to recommended values in
\href{https://doi.org/10.1198/jcgs.2009.0011}{Garthwaite and Jones (2009)})}

\item{n}{if method = 'GJ', the unweighted averages of the final \code{n}
values are taken as the final CI (if unspecified, defaults to recommended
value in
\href{https://doi.org/10.1198/jcgs.2009.0011}{Garthwaite and Jones (2009)})}

\item{dist}{assumed distribution for y variable. If the argument is a
character string, then it is assumed to name an element from
\code{\link[survival]{survreg.distributions}}. These include "weibull",
"exponential", "gaussian", "logistic","lognormal" and "loglogistic".
Otherwise, it is assumed to be a user defined list conforming to the format
described in \code{\link[survival]{survreg.distributions}}.}
}
\description{
Calculate a randomization-based confidence interval (CI) for a regression
parameter from a particular regression model, see Details.
}
\details{
These functions are used to calculate randomization-based confidence
intervals (CI) for a regression parameter. These CIs correspond to inverting
randomization tests by using an offset to test non-zero "null" values
(Rabideau and Wang). To invert the randomization test, these functions adapt
a computationally efficient CI algorithm based on the Robbins-Monro search
process. Two methods can be used and correspond to
\href{http://doi.org/10.2307/2532852}{Garthwaite (1996)} and
\href{https://doi.org/10.1198/jcgs.2009.0011}{Garthwaite and Jones (2009)}.

These functions corrrespond to particular regression models:
\itemize{
  \item \code{permci_glm}: randomization CI based on
  \code{\link[stats]{glm}}
  \item \code{permci_survreg}: randomization CI based on
  \code{\link[survival]{survreg}}
  \item \code{permci_coxph}: randomization CI based on
  \code{\link[survival]{coxph}}
}
To ensure correct specification of the parameters passed to the models above
(e.g. \code{formula} in \code{\link[survival]{survreg}}), please refer to
their documentation.
}
\examples{
# Calculate randomization-based CI for the incidence rate ratio (IRR) of
# bacterial pneumonia episodes between the two intervention groups in
# pneumovac data set. (Note, it will take a few seconds to run 1,000
# permutations)

head(pneumovac) # visualize data
ci <- permci_glm(bpepisodes ~ spnvac, trtname = 'spnvac',
                 runit = 'randunit', family = poisson, data = pneumovac,
                 nperm = 1000, ncores = 2, seed = 445)
print(ci$ci)
#       lower       upper
# -0.97314014  0.06265964
plot(ci) # monitor convergence of CI search

}
\references{
Garthwaite, P. H. (1996). Confidence intervals from randomization tests.
Biometrics 52, 1387â€“1393.

Garthwaite, P. H. and Jones, M. C. (2009). A Stochastic Approximation Method
and Its Application to Confidence Intervals. Journal of Computational and
Graphical Statistics 18, 184-200.

Rabideau, D. J. and Wang, R. Randomization-Based Confidence Intervals for
Cluster Randomized Trials. Under Review.
}
\seealso{
\code{\link[permuter]{permci}} for a more general CI function;
\code{\link[permuter]{permci_glm}},
\code{\link[permuter]{permci_survreg}}, \code{\link[permuter]{permci_coxph}}
for corresponding randomization-based CIs
}
